//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POPS_CLIENT.SupplierServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SUPPLIER", Namespace="http://schemas.datacontract.org/2004/07/POPS_WCF")]
    [System.SerializableAttribute()]
    public partial class SUPPLIER : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SUPLADDRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SUPLNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SUPLNOField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUPLADDR {
            get {
                return this.SUPLADDRField;
            }
            set {
                if ((object.ReferenceEquals(this.SUPLADDRField, value) != true)) {
                    this.SUPLADDRField = value;
                    this.RaisePropertyChanged("SUPLADDR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUPLNAME {
            get {
                return this.SUPLNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUPLNAMEField, value) != true)) {
                    this.SUPLNAMEField = value;
                    this.RaisePropertyChanged("SUPLNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUPLNO {
            get {
                return this.SUPLNOField;
            }
            set {
                if ((object.ReferenceEquals(this.SUPLNOField, value) != true)) {
                    this.SUPLNOField = value;
                    this.RaisePropertyChanged("SUPLNO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SupplierServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSupplier", ReplyAction="http://tempuri.org/IService1/GetSupplierResponse")]
        POPS_CLIENT.SupplierServiceReference.SUPPLIER GetSupplier(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSupplier", ReplyAction="http://tempuri.org/IService1/GetSupplierResponse")]
        System.Threading.Tasks.Task<POPS_CLIENT.SupplierServiceReference.SUPPLIER> GetSupplierAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSuppliers", ReplyAction="http://tempuri.org/IService1/GetAllSuppliersResponse")]
        POPS_CLIENT.SupplierServiceReference.SUPPLIER[] GetAllSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSuppliers", ReplyAction="http://tempuri.org/IService1/GetAllSuppliersResponse")]
        System.Threading.Tasks.Task<POPS_CLIENT.SupplierServiceReference.SUPPLIER[]> GetAllSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSupplier", ReplyAction="http://tempuri.org/IService1/AddSupplierResponse")]
        void AddSupplier(POPS_CLIENT.SupplierServiceReference.SUPPLIER item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSupplier", ReplyAction="http://tempuri.org/IService1/AddSupplierResponse")]
        System.Threading.Tasks.Task AddSupplierAsync(POPS_CLIENT.SupplierServiceReference.SUPPLIER item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSupplier", ReplyAction="http://tempuri.org/IService1/UpdateSupplierResponse")]
        void UpdateSupplier(POPS_CLIENT.SupplierServiceReference.SUPPLIER item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSupplier", ReplyAction="http://tempuri.org/IService1/UpdateSupplierResponse")]
        System.Threading.Tasks.Task UpdateSupplierAsync(POPS_CLIENT.SupplierServiceReference.SUPPLIER item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSupplier", ReplyAction="http://tempuri.org/IService1/DeleteSupplierResponse")]
        void DeleteSupplier(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSupplier", ReplyAction="http://tempuri.org/IService1/DeleteSupplierResponse")]
        System.Threading.Tasks.Task DeleteSupplierAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : POPS_CLIENT.SupplierServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<POPS_CLIENT.SupplierServiceReference.IService1>, POPS_CLIENT.SupplierServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public POPS_CLIENT.SupplierServiceReference.SUPPLIER GetSupplier(string id) {
            return base.Channel.GetSupplier(id);
        }
        
        public System.Threading.Tasks.Task<POPS_CLIENT.SupplierServiceReference.SUPPLIER> GetSupplierAsync(string id) {
            return base.Channel.GetSupplierAsync(id);
        }
        
        public POPS_CLIENT.SupplierServiceReference.SUPPLIER[] GetAllSuppliers() {
            return base.Channel.GetAllSuppliers();
        }
        
        public System.Threading.Tasks.Task<POPS_CLIENT.SupplierServiceReference.SUPPLIER[]> GetAllSuppliersAsync() {
            return base.Channel.GetAllSuppliersAsync();
        }
        
        public void AddSupplier(POPS_CLIENT.SupplierServiceReference.SUPPLIER item) {
            base.Channel.AddSupplier(item);
        }
        
        public System.Threading.Tasks.Task AddSupplierAsync(POPS_CLIENT.SupplierServiceReference.SUPPLIER item) {
            return base.Channel.AddSupplierAsync(item);
        }
        
        public void UpdateSupplier(POPS_CLIENT.SupplierServiceReference.SUPPLIER item) {
            base.Channel.UpdateSupplier(item);
        }
        
        public System.Threading.Tasks.Task UpdateSupplierAsync(POPS_CLIENT.SupplierServiceReference.SUPPLIER item) {
            return base.Channel.UpdateSupplierAsync(item);
        }
        
        public void DeleteSupplier(string id) {
            base.Channel.DeleteSupplier(id);
        }
        
        public System.Threading.Tasks.Task DeleteSupplierAsync(string id) {
            return base.Channel.DeleteSupplierAsync(id);
        }
    }
}
